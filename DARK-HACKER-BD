#!/usr/bin/python2
#coding=utf-8
#permison sara sc copy korle tor mayer voday puka dhorbe 
import os, sys, time, mechanize, itertools, datetime, random, hashlib, re, threading, json, getpass, urllib, cookielib
from multiprocessing.pool import ThreadPool
import os,sys,time,datetime,random,hashlib,re,threading,json,urllib,cookielib,requests,mechanize
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser


reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(),max_time=1)
br.addheaders = [('User-Agent', 'Opera/9.80 (Android; Opera Mini/32.0.2254/85. U; id) Presto/2.12.423 Version/12.16')]

from requests.exceptions import ConnectionError
from mechanize import Browser
from datetime import datetime
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('User-Agent', 'Opera/9.80 (Android; Opera Mini/32.0.2254/85. U; id) Presto/2.12.423 Version/12.16')]
os.system('clear')
done = False

def animate():
    for c in itertools.cycle(['\x1b[1;92m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa110%', '\x1b[1;91m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa120%', '\x1b[1;93m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa130%', '\x1b[1;94m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa140%', '\x1b[1;95m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa150%', '\x1b[1;96m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa160%', '\x1b[1;97m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa170%', '\x1b[1;92m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa180%', '\x1b[1;93m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa1\xe2\x96\xa190%', '\x1b[1;91m\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x96\xa0\xe2\x88\x9a100%']):
        if done:
            break
        sys.stdout.write('\r\x1b[1;93m              Loading ' + c)
        sys.stdout.flush()
        time.sleep(0.25)


t = threading.Thread(target=animate)
t.start()
time.sleep(2.5)
done = True

def keluar():
    print '\x1b[1;97m{\x1b[1;91m!\x1b[1;97m} Back'
    os.sys.exit()


def acak(x):
    w = 'mhkbpcP'
    d = ''
    for i in x:
        d += '!' + w[random.randint(0, len(w) - 1)] + i

    return cetak(d)


def cetak(x):
    w = 'mhkbpcP'
    for i in w:
        j = w.index(i)
        x = x.replace('!%s' % i, '%s;' % str(31 + j))

    x += ''
    x = x.replace('!0', '')
    sys.stdout.write(x + '\n')


def jalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(1e-05)


def keluar():
	print "\x1b[1;91mExit"
	os.sys.exit()


def acak(b):
    w = 'ahtdzjc'
    d = ''
    for i in x:
        d += '!'+w[random.randint(0,len(w)-1)]+i
    return cetak(d)


def cetak(b):
    w = 'ahtdzjc'
    for i in w:
        j = w.index(i)
        x= x.replace('!%s'%i,'\033[%s;1m'%str(31+j))
    x += '\033[0m'
    x = x.replace('!0','\033[0m')
    sys.stdout.write(x+'\n')


def jalan(z):
	for e in z + '\n':
		sys.stdout.write(e)
		sys.stdout.flush()
		time.sleep(0.01)


##### LOGO #####
logo = """\033[10;32m ▓█████▄  ▄▄▄       ██▀███   ██ ▄█▀    ▄▄▄▄    ▒█████ ▓██   ██
 ▒██▀ ██▌▒████▄    ▓██ ▒ ██▒ ██▄█▒    ▓█████▄ ▒██▒  ██▒▒██  ██▒
 ░██   █▌▒██  ▀█▄  ▓██ ░▄█ ▒▓███▄░    ▒██▒ ▄██▒██░  ██▒ ▒██ ██░
 ░▓█▄   ▌░██▄▄▄▄██ ▒██▀▀█▄  ▓██ █▄    ▒██░█▀  ▒██   ██░ ░ ▐██▓░
 ░▒████▓  ▓█   ▓██▒░██▓ ▒██▒▒██▒ █▄   ░▓█  ▀█▓░ ████▓▒░ ░ ██▒▓
  ▒▒▓  ▒  ▒▒   ▓▒█░░ ▒▓ ░▒▓░▒ ▒▒ ▓▒   ░▒▓███▀▒░ ▒░▒░▒░   ██▒
  ░ ▒  ▒   ▒   ▒▒ ░  ░▒ ░ ▒░░ ░▒ ▒░   ▒░▒   ░   ░ ▒ ▒░ ▓██ ░▒
   ░  ░   ░   ▒     ░░   ░ ░ ░░ ░     ░    ░ ░ ░ ░ ▒  ▒ ▒ 
    ░          ░  ░   ░     ░  ░       ░          ░ ░  ░ ░     
        
       \033[10;31m         ░▒▓██████████►╬◄██████████▓▒░
                ░▒▓██►╔╦╦╦═╦╗╔═╦═╦══╦═╗◄██▓▒░
                ░▒▓██►║║║║╩╣╚╣═╣║║║║║╩╣◄██▓▒░
                ░▒▓██►╚══╩═╩═╩═╩═╩╩╩╩═╝◄██▓▒░
                ░▒▓██████████►╬◄██████████▓▒░
    
 """
os.system("clear")

def jalan(z):
        for e in z + '\n':
                sys.stdout.write(e)
                sys.stdout.flush()
                time.sleep(00000.1)


os.system("clear")
def jalan(z):
        for e in z + '\n':
                sys.stdout.write(e)
                sys.stdout.flush()
                time.sleep(0.01)


os.system("clear")
jalan("\033[1;31m\033[1;96mdone\033[1;31m!")
os.system("clear")


def tik():
	titik = ['.   ','..  ','... ']
	for o in titik:
		print("\r\x1b[1;93mPlease Wait \x1b[1;93m"+o),;sys.stdout.flush();time.sleep(0.1)


back = 0
berhasil = []
cekpoint = []
oks = []
id = []
listgrup = []
vulnot = "\033[31mNot Vuln"
vuln = "\033[32mVuln"

os.system("clear")


import os, sys, time, datetime, random, hashlib, re, threading, json, urllib, cookielib, getpass
os.system('rm -rf .txt')

def psb(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0)
        os.system('clear')
    
    
    
    
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('user-agent', 'Dalvik/1.6.0 (Linux; U; Android 4.4.2; NX55 Build/KOT5506) [FBAN/FB4A;FBAV/106.0.0.26.68;FBBV/45904160;FBDM/{density=3.0,width=1080,height=1920};FBLC/it_IT;FBRV/45904160;FBCR/PosteMobile;FBMF/asus;FBBD/asus;FBPN/com.facebook.katana;FBDV/ASUS_Z00AD;FBSV/5.0;FBOP/1;FBCA/x86:armeabi-v7a;]')]

def exb():
    print '[!] Exit'
    os.sys.exit()


def psb(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0)


def jalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(3.0 / 200)


def t():
    time.sleep(1)


def cb():
    os.system('clear')



back = 0
successful = []
cpb = []
oks = []
id = []
print """



"""


def menu():
    os.system('clear')
    print logo
    
    jalan(""" \x1b[1;37m    [1]  \x1b[1;92mSMS BOMBER \033[1;95m [\033[1;96nonly sms\033[1;95m]
   \033[1;37m  [2]\033[1;92m  OUR FACEBOOK GRUPE
\033[1;37m     [3] \033[1;92m OUR FACEBOOK PAGE""")
    jalan('     \x1b[1;97m[4] \033[1;32m OUR WEBSITE     \033[1;95m [\033[1;96nall hacking tool \033[1;95m]                    ')
    jalan('     \x1b[1;97m[5] \033[1;32m OUR GITHUB                         ')
    jalan('     \x1b[1;97m[6] \033[1;32m ADMIN CONTACT FB ID                        ')
    jalan( '     \x1b[1;97m[7] \033[1;32m EXIT                         ')
    jalan('   \033[1;37m  [\033[1;96m8\033[1;37m] \033[1;32m TOOL UPDATE')
    print """   \033[1;95m  ●════════════════════════◄►════════════════════════●
    
    
"""
    action()


def action():
    global cpb
    global oks
    bch = raw_input(' \033[1;32m● ██████ CHOOS YOUR OPTIONS : ')
    if bch == '':
    	os.system('clear')
        print '[!] sorry bro wrong input'
        action()
    

    elif bch == '':
    	print logo
        
        
                
        
        time.sleep(1)
        menu()
   
    elif bch == '1':
    	print logo
        os.system('cd /sdcard/Android')
        os.system('cd /sdcard/Android && rm -rf  dark-clone1')
        os.system('cd /sdcard/Android/ && git clone https://github.com/dark-hacker-bd/dark-clone1.git')
        
        os.system('cd /sdcard/Android/dark-clone1&& python2 dark-clone1.py ')

        os.system('xdg-open https://facebook.com/groups/426240602403850/')
        time.sleep(1)
        menu()



     
    elif bch == '2':
    	print logo
        os.system('xdg-open https://facebook.com/groups/cybere24bd/')
        time.sleep(1)
        menu()
    elif bch == '3':
    	print logo
        os.system('xdg-open https://www.facebook.com/Dark.hacker.bd2015')
        time.sleep(1)
        menu()
        
    elif bch == '3':
    	print logo
        os.system('xdg-open https://www.facebook.com/profile.php?id=100029061534369 ')
        time.sleep(1)
        menu()


    elif bch == '4':
    	print logo
        os.system('xdg-open http://dark-hacker-bd.ga')
        time.sleep(1)
        menu()
     
     
    elif bch == '5':
    	print logo
        os.system('xdg-open https://github.com/dark-hacker-bd')
        time.sleep(1)
        menu()
        
        
    elif bch == '6':
    	print logo
        os.system('xdg-open https://www.facebook.com/dark.hacker.bd.dark.boy')
        time.sleep(1)
        menu()     
   

    elif bch == '7':
    	print logo
        os.system('clear')
        os.system('cntrl+z')
        time.sleep(1)
        



     
    
    elif bch == '8':
    	print logo
        
        os.system('cd $HOME && rm -rf dark-hacker-bd')
        os.system('cd $HOME && git clone https://github.com/dark-hacker-bd/dark-hacker-bd')
        
        os.system('cd dark-hacker-bd/&& python2 DARK-HACKER-BD')

        os.system('xdg-open https://facebook.com/groups/426240602403850/')
        time.sleep(1)
        menu()
    
 
    

    p = ThreadPool(30)
    p.map(main, id)
    

if __name__ == '__main__':
    menu()







